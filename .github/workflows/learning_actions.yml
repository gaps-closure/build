name: learn-github-actions
run-name: ${{ github.actor }} is learning github actions
on: [push]

jobs:
  devcontainer-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        
    container: 
      image: gapsclosure/closuredev:develop
#      options: --env "HOME=/home/closure"
      options: --user closure     
    steps:
      - name: who am I
        run:  whoami
      - name: check PATH
        run: printenv PATH
#      - name: look for conflict_analyzer
#        run: which conflict_analyzer
      - name: closureenv
        run:  source /opt/closure/etc/closureenv; printenv PATH; printenv PYTHONPATH
#       - name: reload .bashrc 
#        run:  source /home/closure/.bash_profile
      - name: what is home
        run: echo $HOME
#      - name: test conflict analyzer in the container
#       run: source /home/closure/.bash_profile; conflict_analyzer --help
      - name: test multiline string
        run: |
          source /home/closure/.bash_profile
          printenv PATH
          printenv PYTHONPATH
          ls .
          cd /home/closure
          git clone --recurse-submodules https://github.com/gaps-closure/build.git
          find . -name example1 -print
          echo "### Testing example1"
          cd build/apps/examples/example1
          vstask "0 CLEAN SOURCE"
          vstask "1 ANNOTATE"
          cp .solution/refactored/*.c annotated/
          ls -ltra annotated/*.c
          vstask "2 ANALYZE PARTITION CONFLICTS"
          [ -f ./topology.json ] && echo "topology.json exists"
          [ -f ./artifact.json ] && echo "artifact.json exists"
          vstask "9a DIVIDE"
          myEnclaves=$(grep "export ENCLAVES=" .make/closure_env.sh | sed -ne 's/export ENCLAVES="//p' |sed -ne 's/"//p')
          ls divvied
          echo $myEnclaves
          IFS=' ' read -ra ArrEc <<< $myEnclaves
          for i in "${ArrEc[@]}"; do [ -d divvied/$i ] && echo "Directory for $i exists" || exit 1; done
          vstask "9b AUTOGEN GEDL, RPCs, IDL, Codecs"
          cd partitioned/multithreaded; find . -type f -exec md5sum {} \;
          cd ../../
          vstask "9c VERIFY"
          vstask "9d BUILD"
          find partitioned/multithreaded -type f -executable
          source .make/closure_env.sh; make -f .make/mbig.make hal
          find partitioned/multithreaded -type f -exec md5sum {} \; |grep "hal.*cfg"
          
          
  check-pytest-version:
    runs-on: ubuntu-latest
    steps:      
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: true

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
        
      - name: Current branch name
        run: |
          echo "${{ steps.branch-name.outputs.current_branch }}"
#      - name: install pytest
#        run: pip install -U pytest
#      - name: test docker pull
#        run: docker pull gapsclosure/closuredev:develop
