IDIR=./annotated
EDIR=./annotated-working

# INCLUDES must also define FACE
INCLUDES=-I$(LLVM_INCLUDE) -I$(CLOSURE_INCLUDES)

JOINCLEMAPS=~acichocki/closure/top-level/apps/eridemo2020/secdesk/.solution/join_clemaps.py  # XXX: fix

ifdef FACE
CLANG_FLAGS += -DINC_FACE_RECOGNITION=1
endif

enclaves: $(EDIR)/pdgragh.main.dot
	ln -s $(EDIR)/pdgragh.main.dot .
	ln -s $(EDIR)/$(PROG)_all.ll ./$(PROG).mod.ll
	ln -s $(EDIR)/$(PROG).all.clemap.json .
	$(PYTHON) $(PARTITIONER) $(PROG).all

dot: $(EDIR)/pdgragh.main.dot

$(EDIR)/pdgragh.main.dot: $(EDIR)/$(PROG)_all.ll
	#$(OPT_DBG) -load $(LIBPDG) -dot-pdg $< > make_dot.log 2>&1 
	$(OPT_NODBG) -load $(LIBPDG) -dot-pdg $< > make_dot.log 2>&1
	mv pdgragh.main.dot $(EDIR)

conflictir: $(EDIR)/$(PROG)_all.ll

$(EDIR)/$(PROG)_all.ll: $(EDIR)/compencs.done
	$(eval ENCLAVELL += $(shell find $(EDIR) -name *.ll;))
	$(LLVMLINK) $(ENCLAVELL) -S -o $@

compencs: $(EDIR)/compencs.done

$(EDIR)/compencs.done: $(EDIR)/preproc.done
	$(foreach p,$(shell find $(EDIR) -name *.c;), $(CLANG) $(CLANG_FLAGS) $(INCLUDES) -I $(EDIR)/facilio/include $p -o $(basename $p).ll;)
	touch $(EDIR)/compencs.done

preproc: $(EDIR)/preproc.done

# preprocess each C and H file, rename them back
$(EDIR)/preproc.done: $(EDIR)/cleancopy.done
	$(eval PREPROCC += $(shell find $(EDIR) -name *.c;))
	$(eval PREPROCH += $(shell find $(EDIR) -name *.h;))
	$(foreach p,$(PREPROCC), $(PYTHON) $(PREPROCESSOR) -s ${CLOSURE_SCHEMAS}/cle-schema.json -f $p;)
	$(foreach p,$(PREPROCH), $(PYTHON) $(PREPROCESSOR) -s ${CLOSURE_SCHEMAS}/cle-schema.json -f $p;)
	$(foreach p,$(PREPROCC), mv $(basename $p).mod.c $p;)
	$(foreach p,$(PREPROCH), mv $(basename $p).mod.h $p;)
	$(PYTHON) $(JOINCLEMAPS) $(EDIR)/$(PROG).all.clemap.json $(PREPROCC) $(PREPROCH)
	touch $(EDIR)/preproc.done

cleancopy: $(EDIR)/cleancopy.done

$(EDIR)/cleancopy.done:
	rm -rf $(EDIR) && cp -r $(IDIR) $(EDIR)
	touch $(EDIR)/cleancopy.done

clean:
	rm -rf $(EDIR) *.clemap.* *.ll *.dot *.log

	
