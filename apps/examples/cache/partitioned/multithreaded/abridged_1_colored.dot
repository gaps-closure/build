strict graph "Program Dependency Graph for 'main' function" {
label="Program Dependency Graph for 'main' function";
Node0x556bd644b3e0 [fillcolor=purple, label="{  %23 = bitcast %struct._request_fib_datatype* %3 to i8*, !dbg !88, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 30 col 25 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556bd644b590 [fillcolor=purple, label="{  %25 = bitcast %struct._response_fib_datatype* %4 to i8*, !dbg !91, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 31 col 29 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556655d8e0d0 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x556655d7feb0 [fillcolor=orange, label="{  %28 = bitcast %struct._response_fib_datatype* %6 to i8*, !dbg !108, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 34 col 25 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x556655d80420 [fillcolor=orange, label="{  %23 = load i8*, i8** @_handle_request_fib.ssocket, align 8, !dbg !100, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 30 col 20 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x556bd644b260 [dbginfo="Name: xdc_blocking_recv on line 31 column 2 in file partitioned/multithreaded/purple/cache_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %24, i8* %25, %struct._tag* %2), !dbg !92, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 31 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x556655d7ad00 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_request_fib \<\<0x556655d2ff40\> = distinct !DISubprogram(name: \"_handle_request_fib\", scope: \<0x556655d31360\>, file: \<0x556655d31360\>, line: 5, type: \<0x556655d31980\>, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x556655d30468\>, retainedNodes: \<0x556655d28f50\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x556655d80480 [fillcolor=orange, label="{  %27 = load i8*, i8** @_handle_request_fib.psocket, align 8, !dbg !107, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 34 col 16 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x556bd644b1d0 [dbginfo="Name: xdc_asyn_send on line 30 column 2 in file partitioned/multithreaded/purple/cache_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %22, i8* %23, %struct._tag* %1), !dbg !89, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x556655d7fcd0 [dbginfo="Name: xdc_asyn_send on line 34 column 2 in file partitioned/multithreaded/orange/cache_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %27, i8* %28, %struct._tag* %4), !dbg !109, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 34 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x556655d7fb20 [dbginfo="Name: xdc_blocking_recv on line 30 column 2 in file partitioned/multithreaded/orange/cache_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %23, i8* %24, %struct._tag* %3), !dbg !102, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x556bd6465f60 [fillcolor=purple, label="{  %1 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556bd644bae0 [fillcolor=purple, label="{  %22 = load i8*, i8** @_rpc_fib.psocket, align 8, !dbg !87, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 30 col 16 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556bd644b1a0 [fillcolor=purple, label="{  %2 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556bd644c050 [fillcolor=purple, label="{\<\<ENTRY\>\> _rpc_fib \<\<0x556bd641f740\> = distinct !DISubprogram(name: \"_rpc_fib\", scope: \<0x556bd6416780\>, file: \<0x556bd6416780\>, line: 2, type: \<0x556bd64208c0\>, scopeLine: 2, spFlags: DISPFlagDefinition, unit: \<0x556bd641f7e8\>, retainedNodes: \<0x556bd641f780\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x556bd644bb40 [fillcolor=purple, label="{  %24 = load i8*, i8** @_rpc_fib.ssocket, align 8, !dbg !90, DBGLOC file partitioned/multithreaded/purple/cache_rpc.mod.c line 31 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x556655d7fc10 [fillcolor=orange, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x556655d7fd90 [fillcolor=orange, label="{  %24 = bitcast %struct._request_fib_datatype* %5 to i8*, !dbg !101, DBGLOC file partitioned/multithreaded/orange/cache_rpc.mod.c line 30 col 29 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
N [pos="0,25!", shape=polygon, side=green, style=invis];
S [pos="0,-25!", shape=polygon, side=orange, style=invis];
Node0x556bd644b3e0 -- Node0x556bd644b1d0  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b3e0 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556bd644b3e0 -- N  [style=invis];
Node0x556bd644b590 -- Node0x556bd644b260  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b590 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556bd644b590 -- N  [style=invis];
Node0x556655d8e0d0 -- Node0x556655d7fb20  [label="{DEF_USE}", style="dotted"];
Node0x556655d8e0d0 -- Node0x556655d7ad00  [label="{CONTROL}"];
Node0x556655d8e0d0 -- S  [style=invis];
Node0x556655d7feb0 -- Node0x556655d7fcd0  [label="{DEF_USE}", style="dotted"];
Node0x556655d7feb0 -- Node0x556655d7ad00  [label="{CONTROL}"];
Node0x556655d7feb0 -- S  [style=invis];
Node0x556655d80420 -- Node0x556655d7fb20  [label="{DEF_USE}", style="dotted"];
Node0x556655d80420 -- Node0x556655d7ad00  [label="{CONTROL}"];
Node0x556655d80420 -- S  [style=invis];
Node0x556bd644b260 -- Node0x556655d7fcd0  [label="{CROSSDOMAIN}"];
Node0x556bd644b260 -- Node0x556bd644b1a0  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b260 -- Node0x556bd644bb40  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b260 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556655d7ad00 -- Node0x556655d7fc10  [label="{CONTROL}"];
Node0x556655d7ad00 -- Node0x556655d7fd90  [label="{CONTROL}"];
Node0x556655d7ad00 -- Node0x556655d7fb20  [label="{CONTROL}"];
Node0x556655d7ad00 -- Node0x556655d80480  [label="{CONTROL}"];
Node0x556655d7ad00 -- Node0x556655d7fcd0  [label="{CONTROL}"];
Node0x556655d7ad00 -- S  [style=invis];
Node0x556655d80480 -- Node0x556655d7fcd0  [label="{DEF_USE}", style="dotted"];
Node0x556655d80480 -- S  [style=invis];
Node0x556bd644b1d0 -- Node0x556655d7fb20  [label="{CROSSDOMAIN}"];
Node0x556bd644b1d0 -- Node0x556bd6465f60  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b1d0 -- Node0x556bd644bae0  [label="{DEF_USE}", style="dotted"];
Node0x556bd644b1d0 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556655d7fcd0 -- Node0x556655d7fc10  [label="{DEF_USE}", style="dotted"];
Node0x556655d7fb20 -- Node0x556655d7fd90  [label="{DEF_USE}", style="dotted"];
Node0x556bd6465f60 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556bd6465f60 -- N  [style=invis];
Node0x556bd644bae0 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556bd644bae0 -- N  [style=invis];
Node0x556bd644b1a0 -- Node0x556bd644c050  [label="{CONTROL}"];
Node0x556bd644b1a0 -- N  [style=invis];
Node0x556bd644c050 -- Node0x556bd644bb40  [label="{CONTROL}"];
Node0x556bd644c050 -- N  [style=invis];
Node0x556bd644bb40 -- N  [style=invis];
Node0x556655d7fc10 -- S  [style=invis];
Node0x556655d7fd90 -- S  [style=invis];
}
