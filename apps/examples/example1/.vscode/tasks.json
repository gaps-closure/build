{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "0a CLEAN SOURCE",
        "type": "shell",
        "command": "rm -rf annotated partitioned divvied refactored *.json;",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "0b INITIALIZE",
        "type": "shell",
        "command": "echo Welcome to GAPS CLOSURE Toolchain; cd ~/gaps/build/src/hal; make clean; make",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "0c BUILD PLAIN",
        "type": "shell",
        "command": "cd plain; make clean; make; ./example1; make clean",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "1 ANNOTATE",
        "type": "shell",
        "command": "mkdir annotated; cp -R plain/* annotated; echo Prepared sources for CLE annotation by developer under ./annotated; echo Move to Conflict Analysis when done annotating",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "2 ANALYZE PARTITION CONFLICTS",
        "type": "shell",
        "command": "cd annotated; make -f ../.vscode/Makefile.conflicts dot && make -f ../.vscode/Makefile.conflicts enclaves && mkdir -p ../refactored && cp topology.json ../ && make -f ../.vscode/Makefile.conflicts clean && cp -r * ../refactored",
        "args": [],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": []
      },
      {
        "label": "2+ MAGIC BUTTON",
        "type": "shell",
        "command": "",
        "args": [],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "dependsOrder": "sequence",
        "dependsOn": [
          "3 DIVIDE",
          "4 AUTOGEN GEDL, RPCs, IDL, Codecs",
          "5 VERIFY",
          "6 VISUALIZE CROSS-DOMAIN CUT",
          "7 BUILD",
          "8 EMULATE"
        ],
        "problemMatcher": []
      },
      {
        "label": "3 DIVIDE",
        "type": "shell",
        "command": "make -f .vscode/Makefile.divvied",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "4 AUTOGEN GEDL, RPCs, IDL, Codecs",
        "type": "shell",
        "command": "mkdir -p partitioned; cp -r ../../../src/capo/gedl/heuristics ./partitioned; make -f .vscode/Makefile.gedl rpc;",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "5 VERIFY",
        "type": "shell",
        "command": "make -f .vscode/Makefile.verifier verify",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "6 VISUALIZE CROSS-DOMAIN CUT",
        "type": "shell",
        "command": "bash .vscode/cutzoom.sh; xdot -f fdp partitioned/multithreaded/abridged_1_colored.dot",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "7 BUILD",
        "type": "shell",
        "command": "make -f .vscode/Makefile.verifier clean; make -f .vscode/Makefile.mbig build",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "8 EMULATE",
        "type": "shell",
        "command": "make -f .vscode/Makefile.mbig pkg; cd ~/gaps/build/src/emu/; ./start.sh example1",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "9 HALCONFIG",
        "type": "shell",
        "command": "#TODO",
        "args": [],
        "group": "build",
        "problemMatcher": []
      }
    ]
  }
