strict graph "Program Dependency Graph for 'main' function" {
label="Program Dependency Graph for 'main' function";
Node0x5632518aa110 [fillcolor=purple, label="{\<\<ENTRY\>\> _rpc_fib \<\<0x5632518668a0\> = distinct !DISubprogram(name: \"_rpc_fib\", scope: \<0x56325185d8e0\>, file: \<0x56325185d8e0\>, line: 2, type: \<0x563251867a80\>, scopeLine: 2, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x563251866948\>, retainedNodes: \<0x5632518668e0\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x564788165fe0 [fillcolor=orange, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x5632518a93a0 [dbginfo="Name: xdc_blocking_recv on line 31 column 2 in file partitioned/multithreaded/purple/example2_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %27, i8* %28, %struct._tag* %4), !dbg !95, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 31 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x564788166840 [fillcolor=orange, label="{  %23 = load i8*, i8** @_handle_request_fib.ssocket, align 8, !dbg !100, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 30 col 20 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x5632518a9c40 [fillcolor=purple, label="{  %27 = load i8*, i8** @_rpc_fib.ssocket, align 8, !dbg !93, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 31 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x564788153e70 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x5632518a9b80 [fillcolor=purple, label="{  %25 = load i8*, i8** @_rpc_fib.psocket, align 8, !dbg !90, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 30 col 16 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x5647881662b0 [fillcolor=orange, label="{  %30 = bitcast %struct._response_fib_datatype* %6 to i8*, !dbg !109, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 34 col 25 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x5632518986d0 [fillcolor=purple, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x564788166160 [fillcolor=orange, label="{  %24 = bitcast %struct._request_fib_datatype* %5 to i8*, !dbg !101, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 30 col 29 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x564788166ef0 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_request_fib \<\<0x56478810bf80\> = distinct !DISubprogram(name: \"_handle_request_fib\", scope: \<0x56478810d400\>, file: \<0x56478810d400\>, line: 5, type: \<0x56478810da20\>, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x56478810c4a8\>, retainedNodes: \<0x564788104f90\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x5647881660a0 [dbginfo="Name: xdc_asyn_send on line 34 column 2 in file partitioned/multithreaded/orange/example2_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %29, i8* %30, %struct._tag* %4), !dbg !110, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 34 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x5632518a9310 [dbginfo="Name: xdc_asyn_send on line 30 column 2 in file partitioned/multithreaded/purple/example2_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %25, i8* %26, %struct._tag* %3), !dbg !92, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x5632518a96d0 [fillcolor=purple, label="{  %28 = bitcast %struct._response_fib_datatype* %6 to i8*, !dbg !94, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 31 col 29 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x5632518a92e0 [fillcolor=purple, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x564788165ef0 [dbginfo="Name: xdc_blocking_recv on line 30 column 2 in file partitioned/multithreaded/orange/example2_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %23, i8* %24, %struct._tag* %3), !dbg !102, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x564788166960 [fillcolor=orange, label="{  %29 = load i8*, i8** @_handle_request_fib.psocket, align 8, !dbg !108, DBGLOC file partitioned/multithreaded/orange/example2_rpc.mod.c line 34 col 16 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x5632518a9520 [fillcolor=purple, label="{  %26 = bitcast %struct._request_fib_datatype* %5 to i8*, !dbg !91, DBGLOC file partitioned/multithreaded/purple/example2_rpc.mod.c line 30 col 25 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
N [pos="0,25!", shape=polygon, side=green, style=invis];
S [pos="0,-25!", shape=polygon, side=orange, style=invis];
Node0x5632518aa110 -- Node0x5632518986d0  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a92e0  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a9b80  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a9520  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a9310  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a9c40  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a96d0  [label="{CONTROL}"];
Node0x5632518aa110 -- Node0x5632518a93a0  [label="{CONTROL}"];
Node0x5632518aa110 -- N  [style=invis];
Node0x564788165fe0 -- Node0x5647881660a0  [label="{DEF_USE}", style="dotted"];
Node0x564788165fe0 -- Node0x564788166ef0  [label="{CONTROL}"];
Node0x564788165fe0 -- S  [style=invis];
Node0x5632518a93a0 -- Node0x5647881660a0  [label="{CROSSDOMAIN}"];
Node0x5632518a93a0 -- Node0x5632518a92e0  [label="{DEF_USE}", style="dotted"];
Node0x5632518a93a0 -- Node0x5632518a96d0  [label="{DEF_USE}", style="dotted"];
Node0x5632518a93a0 -- Node0x5632518a9c40  [label="{DEF_USE}", style="dotted"];
Node0x564788166840 -- Node0x564788165ef0  [label="{DEF_USE}", style="dotted"];
Node0x564788166840 -- Node0x564788166ef0  [label="{CONTROL}"];
Node0x564788166840 -- S  [style=invis];
Node0x5632518a9c40 -- N  [style=invis];
Node0x564788153e70 -- Node0x564788165ef0  [label="{DEF_USE}", style="dotted"];
Node0x564788153e70 -- Node0x564788166ef0  [label="{CONTROL}"];
Node0x564788153e70 -- S  [style=invis];
Node0x5632518a9b80 -- Node0x5632518a9310  [label="{DEF_USE}", style="dotted"];
Node0x5632518a9b80 -- N  [style=invis];
Node0x5647881662b0 -- Node0x5647881660a0  [label="{DEF_USE}", style="dotted"];
Node0x5647881662b0 -- Node0x564788166ef0  [label="{CONTROL}"];
Node0x5647881662b0 -- S  [style=invis];
Node0x5632518986d0 -- Node0x5632518a9310  [label="{DEF_USE}", style="dotted"];
Node0x5632518986d0 -- N  [style=invis];
Node0x564788166160 -- Node0x564788165ef0  [label="{DEF_USE}", style="dotted"];
Node0x564788166160 -- Node0x564788166ef0  [label="{CONTROL}"];
Node0x564788166160 -- S  [style=invis];
Node0x564788166ef0 -- Node0x564788165ef0  [label="{CONTROL}"];
Node0x564788166ef0 -- Node0x564788166960  [label="{CONTROL}"];
Node0x564788166ef0 -- Node0x5647881660a0  [label="{CONTROL}"];
Node0x564788166ef0 -- S  [style=invis];
Node0x5647881660a0 -- Node0x564788166960  [label="{DEF_USE}", style="dotted"];
Node0x5632518a9310 -- Node0x564788165ef0  [label="{CROSSDOMAIN}"];
Node0x5632518a9310 -- Node0x5632518a9520  [label="{DEF_USE}", style="dotted"];
Node0x5632518a96d0 -- N  [style=invis];
Node0x5632518a92e0 -- N  [style=invis];
Node0x564788166960 -- S  [style=invis];
Node0x5632518a9520 -- N  [style=invis];
}
