strict graph "Program Dependency Graph for 'main' function" {
label="Program Dependency Graph for 'main' function";
Node0x563ba2780420 [dbginfo="Name: xdc_asyn_send on line 34 column 2 in file partitioned/multithreaded/orange/example3_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %29, i8* %30, %struct._tag* %4), !dbg !110, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 34 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x55dbd8fa1e00 [dbginfo="Name: xdc_blocking_recv on line 31 column 2 in file partitioned/multithreaded/purple/example3_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %27, i8* %28, %struct._tag* %4), !dbg !98, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 31 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x55dbd8fa2130 [fillcolor=purple, label="{  %28 = bitcast %struct._response_fib_datatype* %6 to i8*, !dbg !97, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 31 col 29 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55dbd8fa3140 [fillcolor=purple, label="{\<\<ENTRY\>\> _rpc_fib \<\<0x55dbd8f660e0\> = distinct !DISubprogram(name: \"_rpc_fib\", scope: \<0x55dbd8f5d1a0\>, file: \<0x55dbd8f5d1a0\>, line: 2, type: \<0x55dbd8f673c0\>, scopeLine: 2, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x55dbd8f66188\>, retainedNodes: \<0x55dbd8f66120\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x563ba278ec70 [dbginfo="Name: xdc_blocking_recv on line 30 column 2 in file partitioned/multithreaded/orange/example3_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %23, i8* %24, %struct._tag* %3), !dbg !102, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x55dbd8fa1c80 [fillcolor=purple, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x563ba2789e10 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x563ba2780ce0 [fillcolor=orange, label="{  %29 = load i8*, i8** @_handle_request_fib.psocket, align 8, !dbg !108, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 34 col 16 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55dbd8fa1f80 [fillcolor=purple, label="{  %26 = bitcast %struct._request_fib_datatype* %5 to i8*, !dbg !94, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 30 col 25 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55dbd8fa26a0 [fillcolor=purple, label="{  %27 = load i8*, i8** @_rpc_fib.ssocket, align 8, !dbg !96, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 31 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55dbd8fa1d40 [fillcolor=purple, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55dbd8fa25e0 [fillcolor=purple, label="{  %25 = load i8*, i8** @_rpc_fib.psocket, align 8, !dbg !93, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 30 col 16 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x563ba27804e0 [fillcolor=orange, label="{  %24 = bitcast %struct._request_fib_datatype* %5 to i8*, !dbg !101, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 30 col 29 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x563ba2780bc0 [fillcolor=orange, label="{  %23 = load i8*, i8** @_handle_request_fib.ssocket, align 8, !dbg !100, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 30 col 20 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55dbd8fa1d70 [dbginfo="Name: xdc_asyn_send on line 30 column 2 in file partitioned/multithreaded/purple/example3_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %25, i8* %26, %struct._tag* %3), !dbg !95, DBGLOC file partitioned/multithreaded/purple/example3_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x563ba2781270 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_request_fib \<\<0x563ba272e570\> = distinct !DISubprogram(name: \"_handle_request_fib\", scope: \<0x563ba272f9f0\>, file: \<0x563ba272f9f0\>, line: 5, type: \<0x563ba2730010\>, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x563ba272ea98\>, retainedNodes: \<0x563ba2727fa0\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x563ba2780360 [fillcolor=orange, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x563ba2780630 [fillcolor=orange, label="{  %30 = bitcast %struct._response_fib_datatype* %6 to i8*, !dbg !109, DBGLOC file partitioned/multithreaded/orange/example3_rpc.mod.c line 34 col 25 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
N [pos="0,25!", shape=polygon, side=green, style=invis];
S [pos="0,-25!", shape=polygon, side=orange, style=invis];
Node0x563ba2780420 -- Node0x563ba2780360  [label="{DEF_USE}", style="dotted"];
Node0x563ba2780420 -- Node0x55dbd8fa1e00  [label="{CROSSDOMAIN}"];
Node0x563ba2780420 -- Node0x563ba2780630  [label="{DEF_USE}", style="dotted"];
Node0x563ba2780420 -- Node0x563ba2780ce0  [label="{DEF_USE}", style="dotted"];
Node0x563ba2780420 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x55dbd8fa1e00 -- Node0x55dbd8fa1d40  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa1e00 -- Node0x55dbd8fa2130  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa1e00 -- Node0x55dbd8fa26a0  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa1e00 -- Node0x55dbd8fa3140  [label="{CONTROL}"];
Node0x55dbd8fa2130 -- Node0x55dbd8fa3140  [label="{CONTROL}"];
Node0x55dbd8fa2130 -- N  [style=invis];
Node0x55dbd8fa3140 -- Node0x55dbd8fa1c80  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- Node0x55dbd8fa1d40  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- Node0x55dbd8fa25e0  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- Node0x55dbd8fa1f80  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- Node0x55dbd8fa1d70  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- Node0x55dbd8fa26a0  [label="{CONTROL}"];
Node0x55dbd8fa3140 -- N  [style=invis];
Node0x563ba278ec70 -- Node0x563ba2789e10  [label="{DEF_USE}", style="dotted"];
Node0x563ba278ec70 -- Node0x55dbd8fa1d70  [label="{CROSSDOMAIN}"];
Node0x563ba278ec70 -- Node0x563ba27804e0  [label="{DEF_USE}", style="dotted"];
Node0x563ba278ec70 -- Node0x563ba2780bc0  [label="{DEF_USE}", style="dotted"];
Node0x563ba278ec70 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x55dbd8fa1c80 -- Node0x55dbd8fa1d70  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa1c80 -- N  [style=invis];
Node0x563ba2789e10 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x563ba2789e10 -- S  [style=invis];
Node0x563ba2780ce0 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x563ba2780ce0 -- S  [style=invis];
Node0x55dbd8fa1f80 -- Node0x55dbd8fa1d70  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa1f80 -- N  [style=invis];
Node0x55dbd8fa26a0 -- N  [style=invis];
Node0x55dbd8fa1d40 -- N  [style=invis];
Node0x55dbd8fa25e0 -- Node0x55dbd8fa1d70  [label="{DEF_USE}", style="dotted"];
Node0x55dbd8fa25e0 -- N  [style=invis];
Node0x563ba27804e0 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x563ba27804e0 -- S  [style=invis];
Node0x563ba2780bc0 -- Node0x563ba2781270  [label="{CONTROL}"];
Node0x563ba2780bc0 -- S  [style=invis];
Node0x563ba2781270 -- Node0x563ba2780360  [label="{CONTROL}"];
Node0x563ba2781270 -- Node0x563ba2780630  [label="{CONTROL}"];
Node0x563ba2781270 -- S  [style=invis];
Node0x563ba2780360 -- S  [style=invis];
Node0x563ba2780630 -- S  [style=invis];
}
